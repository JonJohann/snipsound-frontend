// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Recording /> renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Image
    resizeMode="contain"
    source={1}
    style={
      Object {
        "alignSelf": "stretch",
        "marginHorizontal": 10,
        "marginVertical": -110,
        "width": undefined,
      }
    }
  />
  <View
    style={
      Object {
        "flex": 2,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "fontSize": 20,
            "marginRight": 5,
          }
        }
      >
        Category:
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "white",
            "borderColor": "#F194FF",
            "borderRadius": 10,
            "borderWidth": 1,
            "elevation": 2,
            "marginHorizontal": 2,
            "marginVertical": 5,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 8,
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.25,
            "shadowRadius": 0.84,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "black",
              "fontFamily": "Manrope_400Regular",
              "fontSize": 20,
            }
          }
        >
          Rap
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#e6e6e6",
            "borderColor": "#6d557000",
            "borderRadius": 10,
            "borderWidth": 1,
            "elevation": 2,
            "marginHorizontal": 2,
            "marginVertical": 5,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "grey",
              "fontFamily": "Manrope_400Regular",
              "fontSize": 20,
            }
          }
        >
          Song
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#e6e6e6",
            "borderColor": "#6d557000",
            "borderRadius": 10,
            "borderWidth": 1,
            "elevation": 2,
            "marginHorizontal": 2,
            "marginVertical": 5,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "grey",
              "fontFamily": "Manrope_400Regular",
              "fontSize": 20,
            }
          }
        >
          Spoken
        </Text>
      </View>
    </View>
    <View>
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Title"
          rejectResponderTermination={true}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderBottomWidth": 0.5,
                "borderColor": "gray",
                "borderRadius": 10,
                "fontSize": 20,
                "height": 40,
                "marginLeft": 10,
                "marginTop": 10,
                "paddingHorizontal": 10,
              },
              Object {
                "flex": 1,
              },
            ]
          }
          underlineColorAndroid="transparent"
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "margin": 10,
              "marginLeft": 2,
              "marginRight": -1,
              "marginTop": 15,
              "opacity": 1,
            }
          }
        >
          <Text />
        </View>
      </View>
      <View
        style={
          Object {
            "width": 350,
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          multiline={true}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Description"
          rejectResponderTermination={true}
          style={
            Object {
              "alignItems": "center",
              "borderBottomWidth": 0.5,
              "borderColor": "gray",
              "borderRadius": 10,
              "fontFamily": "Manrope_400Regular",
              "fontSize": 20,
              "height": 100,
              "marginLeft": 10,
              "marginTop": 10,
              "paddingHorizontal": 10,
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "margin": 10,
            "opacity": 1,
          }
        }
      >
        <Text />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#e6e6e6",
            "borderColor": "#6d557000",
            "borderRadius": 10,
            "borderWidth": 1,
            "elevation": 2,
            "marginHorizontal": 5,
            "marginTop": 10,
            "marginVertical": 5,
            "opacity": 1,
            "paddingHorizontal": 10,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          Upload to Snipsound
        </Text>
      </View>
    </View>
  </View>
</View>
`;
